<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Teams - Task Management</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        .sidebar-link:hover { background-color: rgba(99, 102, 241, 0.1); }
        .sidebar-link.active { background-color: rgba(99, 102, 241, 0.2); border-right: 3px solid #6366f1; }
        .form-input { background-color: rgba(31, 41, 55, 0.8); border: 1px solid rgba(75, 85, 99, 0.5); color: white; }
        .form-input:focus { border-color: #6366f1; box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1); }
        .focus-ring:focus { outline: none; box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.3); }
    </style>

    <script>
        // Define global functions immediately
        function viewTeam(teamId) {
            console.log('Viewing team:', teamId);
            fetch('/api/v1/teams/' + teamId, {
                method: 'GET',
                credentials: 'include'
            })
            .then(response => response.json())
            .then(data => {
                console.log('Team data:', data);
                if (data.success) {
                    const team = data.data;
                    const info = 'Team: ' + team.name + '\nDescription: ' + (team.description || 'No description') + '\nMembers: ' + (team.members ? team.members.length : 0) + '\nCreated: ' + (team.createdAt ? new Date(team.createdAt).toLocaleDateString() : 'Unknown');
                    alert(info);
                } else {
                    alert('Error loading team details: ' + (data.error || 'Unknown error'));
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error loading team details');
            });
        }

        function editTeam(teamId) {
            console.log('Editing team:', teamId);
            const newName = prompt('Enter new team name:');
            if (newName && newName.trim()) {
                fetch('/api/v1/teams/' + teamId, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    credentials: 'include',
                    body: JSON.stringify({ name: newName.trim() })
                })
                .then(response => response.json())
                .then(data => {
                    console.log('Update response:', data);
                    if (data.success) {
                        alert('Team updated successfully!');
                        location.reload();
                    } else {
                        alert('Error updating team: ' + (data.error || 'Unknown error'));
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error updating team');
                });
            }
        }

        function inviteToTeam(teamId) {
            console.log('Inviting to team:', teamId);
            alert('Invite functionality coming soon!');
        }

        // Modal functions
        function openTeamModal() {
            console.log('Opening team modal');
            const modal = document.getElementById('createTeamModal');
            if (modal) {
                modal.classList.remove('hidden');
                modal.classList.add('flex');
            }
        }

        function closeTeamModal() {
            console.log('Closing team modal');
            const modal = document.getElementById('createTeamModal');
            if (modal) {
                modal.classList.add('hidden');
                modal.classList.remove('flex');
            }
        }

        // Create team function
        function createTeam() {
            console.log('Creating team...');

            const name = document.getElementById('teamName').value.trim();
            const description = document.getElementById('teamDescription').value.trim();
            const submitBtn = document.getElementById('createTeamBtn');

            if (!name) {
                alert('Please enter a team name');
                return;
            }

            submitBtn.disabled = true;
            submitBtn.textContent = 'Creating...';

            fetch('/api/v1/teams', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                credentials: 'include',
                body: JSON.stringify({
                    name: name,
                    description: description
                })
            })
            .then(response => response.json())
            .then(data => {
                console.log('Team response:', data);
                if (data.success) {
                    alert('Team created successfully!');
                    closeTeamModal();
                    window.location.reload();
                } else {
                    alert('Error: ' + (data.error || data.message || 'Failed to create team'));
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Network error. Please try again.');
            })
            .finally(() => {
                submitBtn.disabled = false;
                submitBtn.textContent = 'Create Team';
            });
        }
    </script>
</head>
<body class="bg-gray-900 text-white">
    <div class="flex h-screen">
        <!-- Sidebar -->
        <div class="w-64 bg-gray-800 shadow-lg">
            <div class="p-6">
                <h1 class="text-2xl font-bold text-indigo-400">TaskFlow</h1>
                <p class="text-gray-400 text-sm mt-1">Welcome, <%= user.name %></p>
            </div>
            
            <nav class="mt-6">
                <a href="/dashboard" class="sidebar-link flex items-center px-6 py-3 text-gray-300 hover:text-white transition-colors">
                    <i class="fas fa-tachometer-alt mr-3"></i>
                    Dashboard
                </a>
                <a href="/teams" class="sidebar-link active flex items-center px-6 py-3 text-gray-300 hover:text-white transition-colors">
                    <i class="fas fa-users mr-3"></i>
                    Teams
                </a>
                <a href="/projects" class="sidebar-link flex items-center px-6 py-3 text-gray-300 hover:text-white transition-colors">
                    <i class="fas fa-folder mr-3"></i>
                    Projects
                </a>
                <a href="/tasks" class="sidebar-link flex items-center px-6 py-3 text-gray-300 hover:text-white transition-colors">
                    <i class="fas fa-tasks mr-3"></i>
                    Tasks
                </a>
                <a href="/logout" class="sidebar-link flex items-center px-6 py-3 text-gray-300 hover:text-white transition-colors mt-8">
                    <i class="fas fa-sign-out-alt mr-3"></i>
                    Logout
                </a>
            </nav>
        </div>

        <!-- Main Content -->
        <div class="flex-1 overflow-hidden">
            <!-- Header -->
            <header class="bg-gray-800 shadow-sm border-b border-gray-700">
                <div class="px-6 py-4">
                    <div class="flex items-center justify-between">
                        <h2 class="text-2xl font-semibold text-white">Teams</h2>
                        <button type="button" onclick="document.getElementById('createTeamModal').style.display='flex'" class="bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-lg transition-colors">
                            <i class="fas fa-plus mr-2"></i>Create Team
                        </button>
                    </div>
                </div>
            </header>

            <!-- Content -->
            <main class="flex-1 overflow-y-auto p-6">
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                    <% if (teams && teams.length > 0) { %>
                        <% teams.forEach(team => { %>
                            <div class="bg-gray-800 rounded-xl p-6 border border-gray-700 hover:border-indigo-500 transition-colors">
                                <div class="flex items-center justify-between mb-4">
                                    <div class="flex items-center">
                                        <div class="w-12 h-12 bg-indigo-500 bg-opacity-20 rounded-lg flex items-center justify-center mr-4">
                                            <i class="fas fa-users text-indigo-400 text-xl"></i>
                                        </div>
                                        <div>
                                            <h3 class="text-lg font-semibold text-white"><%= team.name %></h3>
                                            <p class="text-gray-400 text-sm">
                                                <% if (team.owner && team.owner._id.toString() === user.id) { %>
                                                    Owner
                                                <% } else { %>
                                                    Member
                                                <% } %>
                                            </p>
                                        </div>
                                    </div>
                                </div>
                                
                                <% if (team.description) { %>
                                    <p class="text-gray-300 text-sm mb-4"><%= team.description %></p>
                                <% } %>
                                
                                <div class="flex items-center justify-between">
                                    <div class="flex items-center text-gray-400 text-sm">
                                        <i class="fas fa-user-friends mr-2"></i>
                                        <%= team.members ? team.members.length : 0 %> members
                                    </div>
                                    <div class="flex space-x-2">
                                        <button onclick="viewTeam('<%= team._id %>')" class="text-gray-400 hover:text-white transition-colors">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                        <% if (team.owner && team.owner._id.toString() === user.id) { %>
                                            <button onclick="editTeam('<%= team._id %>')" class="text-indigo-400 hover:text-indigo-300 transition-colors">
                                                <i class="fas fa-edit"></i>
                                            </button>
                                            <button onclick="inviteToTeam('<%= team._id %>')" class="text-green-400 hover:text-green-300 transition-colors">
                                                <i class="fas fa-user-plus"></i>
                                            </button>
                                        <% } %>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <div class="col-span-full text-center py-12">
                            <div class="w-24 h-24 bg-gray-700 rounded-full flex items-center justify-center mx-auto mb-4">
                                <i class="fas fa-users text-gray-500 text-3xl"></i>
                            </div>
                            <h3 class="text-xl font-semibold text-gray-300 mb-2">No teams yet</h3>
                            <p class="text-gray-500 mb-6">Create your first team to start collaborating</p>
                            <button type="button" onclick="document.getElementById('createTeamModal').style.display='flex'" class="bg-indigo-600 hover:bg-indigo-700 text-white px-6 py-3 rounded-lg transition-colors">
                                <i class="fas fa-plus mr-2"></i>Create Your First Team
                            </button>
                        </div>
                    <% } %>
                </div>
            </main>
        </div>
    </div>

    <!-- Create Team Modal -->
    <div id="createTeamModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
        <div class="bg-gray-800 rounded-xl p-8 w-full max-w-md mx-4 border border-gray-700">
            <div class="flex items-center justify-between mb-6">
                <h3 class="text-xl font-semibold text-white">Create New Team</h3>
                <button onclick="closeTeamModal()" class="text-gray-400 hover:text-white transition-colors">
                    <i class="fas fa-times text-xl"></i>
                </button>
            </div>
            
            <div>
                <div class="space-y-4">
                    <div>
                        <label class="block text-sm font-semibold text-gray-200 mb-2">Team Name</label>
                        <input type="text" id="teamName" name="name" required
                               class="w-full px-4 py-3 form-input rounded-xl focus-ring"
                               placeholder="Enter team name">
                    </div>
                    <div>
                        <label class="block text-sm font-semibold text-gray-200 mb-2">Description (Optional)</label>
                        <textarea id="teamDescription" name="description" rows="3"
                                  class="w-full px-4 py-3 form-input rounded-xl focus-ring"
                                  placeholder="Describe your team's purpose"></textarea>
                    </div>
                </div>

                <div class="flex space-x-4 mt-8">
                    <button type="button" onclick="document.getElementById('createTeamModal').style.display='none'" class="flex-1 px-6 py-3 border border-gray-600 text-gray-300 rounded-xl hover:bg-gray-700 transition-colors">
                        Cancel
                    </button>
                    <button type="button" id="createTeamBtn" onclick="createTeam()" class="flex-1 px-6 py-3 bg-indigo-600 text-white rounded-xl hover:bg-indigo-700 transition-colors">
                        Create Team
                    </button>
                </div>
            </div>
        </div>
    </div>




    </script>

    <script>
        function showTeamModal() {
            console.log('showTeamModal called');
            const modal = document.getElementById('createTeamModal');
            if (modal) {
                modal.style.display = 'flex';
                modal.classList.remove('hidden');
                modal.classList.add('flex');
            }
        }

        function hideTeamModal() {
            console.log('hideTeamModal called');
            const modal = document.getElementById('createTeamModal');
            if (modal) {
                modal.style.display = 'none';
                modal.classList.add('hidden');
                modal.classList.remove('flex');
            }
        }

        function createTeam() {
            console.log('createTeam called');
            const nameInput = document.getElementById('teamName');
            const descInput = document.getElementById('teamDescription');

            if (!nameInput || !descInput) {
                alert('Form elements not found');
                return;
            }

            const name = nameInput.value.trim();
            const description = descInput.value.trim();

            if (!name) {
                alert('Please enter team name');
                return;
            }

            console.log('Submitting team:', {name, description});

            fetch('/api/v1/teams', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                credentials: 'include',
                body: JSON.stringify({name: name, description: description})
            })
            .then(response => {
                console.log('Response status:', response.status);
                return response.json();
            })
            .then(data => {
                console.log('Response data:', data);
                if (data.success) {
                    alert('Team created successfully!');
                    location.reload();
                } else {
                    alert('Error: ' + (data.error || data.message || 'Unknown error'));
                }
            })
            .catch(error => {
                console.error('Fetch error:', error);
                alert('Network error: ' + error.message);
            });
        }

        // Logout function
        function logoutUser() {
            console.log('Logout function called');

            // Try multiple logout methods
            fetch('/api/v1/auth/logout', {
                method: 'GET',
                credentials: 'include'
            })
            .then(response => {
                console.log('API logout response:', response.status);
                // Regardless of API response, redirect to logout page
                window.location.href = '/auth/logout';
            })
            .catch(error => {
                console.log('API logout failed, using direct logout:', error);
                // If API fails, use direct logout
                window.location.href = '/auth/logout';
            });
        }
    </script>

</body>
</html>
