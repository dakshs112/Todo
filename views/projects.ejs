<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Projects - Task Management</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        .sidebar-link:hover { background-color: rgba(99, 102, 241, 0.1); }
        .sidebar-link.active { background-color: rgba(99, 102, 241, 0.2); border-right: 3px solid #6366f1; }
        .form-input { background-color: rgba(31, 41, 55, 0.8); border: 1px solid rgba(75, 85, 99, 0.5); color: white; }
        .form-input:focus { border-color: #6366f1; box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1); }
        .focus-ring:focus { outline: none; box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.3); }
    </style>

    <script>
        // Define global functions immediately
        function viewProject(projectId) {
            console.log('Viewing project:', projectId);
            fetch('/api/v1/projects/' + projectId, {
                method: 'GET',
                credentials: 'include'
            })
            .then(response => response.json())
            .then(data => {
                console.log('Project data:', data);
                if (data.success) {
                    const project = data.data;
                    const info = 'Project: ' + project.title + '\nDescription: ' + (project.description || 'No description') + '\nStatus: ' + project.status + '\nStart Date: ' + (project.startDate ? new Date(project.startDate).toLocaleDateString() : 'Not set') + '\nEnd Date: ' + (project.endDate ? new Date(project.endDate).toLocaleDateString() : 'Not set');
                    alert(info);
                } else {
                    alert('Error loading project details: ' + (data.error || 'Unknown error'));
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error loading project details');
            });
        }

        function editProject(projectId) {
            console.log('Editing project:', projectId);
            const newStatus = prompt('Enter new status (planning, active, on_hold, completed, cancelled):');
            if (newStatus && ['planning', 'active', 'on_hold', 'completed', 'cancelled'].includes(newStatus)) {
                fetch('/api/v1/projects/' + projectId, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    credentials: 'include',
                    body: JSON.stringify({ status: newStatus })
                })
                .then(response => response.json())
                .then(data => {
                    console.log('Update response:', data);
                    if (data.success) {
                        alert('Project updated successfully!');
                        location.reload();
                    } else {
                        alert('Error updating project: ' + (data.error || 'Unknown error'));
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error updating project');
                });
            } else if (newStatus !== null) {
                alert('Invalid status. Please use: planning, active, on_hold, completed, or cancelled');
            }
        }

        // Modal functions
        function openProjectModal() {
            console.log('Opening project modal');
            const modal = document.getElementById('createProjectModal');
            if (modal) {
                modal.classList.remove('hidden');
                modal.classList.add('flex');
            }
        }

        function closeProjectModal() {
            console.log('Closing project modal');
            const modal = document.getElementById('createProjectModal');
            if (modal) {
                modal.classList.add('hidden');
                modal.classList.remove('flex');
            }
        }

        // Create project function
        function createProject() {
            console.log('Creating project...');

            const title = document.getElementById('projectTitle').value.trim();
            const description = document.getElementById('projectDescription').value.trim();
            const startDate = document.getElementById('projectStartDate').value;
            const endDate = document.getElementById('projectEndDate').value;
            const team = document.getElementById('projectTeam').value;
            const submitBtn = document.getElementById('createProjectBtn');

            if (!title) {
                alert('Please enter a project title');
                return;
            }

            submitBtn.disabled = true;
            submitBtn.textContent = 'Creating...';

            const projectData = {
                title: title,
                description: description,
                startDate: startDate,
                endDate: endDate
            };

            if (team) {
                projectData.team = team;
            }

            fetch('/api/v1/projects', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                credentials: 'include',
                body: JSON.stringify(projectData)
            })
            .then(response => response.json())
            .then(data => {
                console.log('Project response:', data);
                if (data.success) {
                    alert('Project created successfully!');
                    closeProjectModal();
                    window.location.reload();
                } else {
                    alert('Error: ' + (data.error || data.message || 'Failed to create project'));
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Network error. Please try again.');
            })
            .finally(() => {
                submitBtn.disabled = false;
                submitBtn.textContent = 'Create Project';
            });
        }
    </script>
</head>
<body class="bg-gray-900 text-white">
    <div class="flex h-screen">
        <!-- Sidebar -->
        <div class="w-64 bg-gray-800 shadow-lg">
            <div class="p-6">
                <h1 class="text-2xl font-bold text-indigo-400">TaskFlow</h1>
                <p class="text-gray-400 text-sm mt-1">Welcome, <%= user.name %></p>
            </div>
            
            <nav class="mt-6">
                <a href="/dashboard" class="sidebar-link flex items-center px-6 py-3 text-gray-300 hover:text-white transition-colors">
                    <i class="fas fa-tachometer-alt mr-3"></i>
                    Dashboard
                </a>
                <a href="/teams" class="sidebar-link flex items-center px-6 py-3 text-gray-300 hover:text-white transition-colors">
                    <i class="fas fa-users mr-3"></i>
                    Teams
                </a>
                <a href="/projects" class="sidebar-link active flex items-center px-6 py-3 text-gray-300 hover:text-white transition-colors">
                    <i class="fas fa-folder mr-3"></i>
                    Projects
                </a>
                <a href="/tasks" class="sidebar-link flex items-center px-6 py-3 text-gray-300 hover:text-white transition-colors">
                    <i class="fas fa-tasks mr-3"></i>
                    Tasks
                </a>
                <a href="/logout" class="sidebar-link flex items-center px-6 py-3 text-gray-300 hover:text-white transition-colors mt-8">
                    <i class="fas fa-sign-out-alt mr-3"></i>
                    Logout
                </a>
            </nav>
        </div>

        <!-- Main Content -->
        <div class="flex-1 overflow-hidden">
            <!-- Header -->
            <header class="bg-gray-800 shadow-sm border-b border-gray-700">
                <div class="px-6 py-4">
                    <div class="flex items-center justify-between">
                        <h2 class="text-2xl font-semibold text-white">Projects</h2>
                        <button type="button" onclick="document.getElementById('createProjectModal').style.display='flex'" class="bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-lg transition-colors">
                            <i class="fas fa-plus mr-2"></i>Create Project
                        </button>
                    </div>
                </div>
            </header>

            <!-- Content -->
            <main class="flex-1 overflow-y-auto p-6">
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                    <% if (projects && projects.length > 0) { %>
                        <% projects.forEach(project => { %>
                            <div class="bg-gray-800 rounded-xl p-6 border border-gray-700 hover:border-indigo-500 transition-colors">
                                <div class="flex items-center justify-between mb-4">
                                    <div class="flex items-center">
                                        <div class="w-12 h-12 bg-blue-500 bg-opacity-20 rounded-lg flex items-center justify-center mr-4">
                                            <i class="fas fa-folder text-blue-400 text-xl"></i>
                                        </div>
                                        <div>
                                            <h3 class="text-lg font-semibold text-white"><%= project.title %></h3>
                                            <p class="text-gray-400 text-sm">
                                                <% if (project.team && project.team.name) { %>
                                                    <i class="fas fa-users mr-1"></i><%= project.team.name %>
                                                <% } else { %>
                                                    <i class="fas fa-user mr-1"></i>Personal Project
                                                <% } %>
                                            </p>
                                        </div>
                                    </div>
                                    <span class="text-xs px-2 py-1 bg-<%= project.status === 'active' ? 'green' : 'gray' %>-500 bg-opacity-20 text-<%= project.status === 'active' ? 'green' : 'gray' %>-400 rounded-full">
                                        <%= project.status %>
                                    </span>
                                </div>
                                
                                <% if (project.description) { %>
                                    <p class="text-gray-300 text-sm mb-4"><%= project.description %></p>
                                <% } %>
                                
                                <div class="flex items-center justify-between text-gray-400 text-sm">
                                    <div class="flex items-center">
                                        <i class="fas fa-calendar mr-2"></i>
                                        <% if (project.startDate) { %>
                                            <%= new Date(project.startDate).toLocaleDateString() %>
                                        <% } else { %>
                                            No start date
                                        <% } %>
                                    </div>
                                    <div class="flex space-x-2">
                                        <button onclick="viewProject('<%= project._id %>')" class="text-gray-400 hover:text-white transition-colors">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                        <% if (project.owner && project.owner._id.toString() === user.id) { %>
                                            <button onclick="editProject('<%= project._id %>')" class="text-indigo-400 hover:text-indigo-300 transition-colors">
                                                <i class="fas fa-edit"></i>
                                            </button>
                                        <% } %>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <div class="col-span-full text-center py-12">
                            <div class="w-24 h-24 bg-gray-700 rounded-full flex items-center justify-center mx-auto mb-4">
                                <i class="fas fa-folder text-gray-500 text-3xl"></i>
                            </div>
                            <h3 class="text-xl font-semibold text-gray-300 mb-2">No projects yet</h3>
                            <p class="text-gray-500 mb-6">Create your first project to get started</p>
                            <button type="button" onclick="document.getElementById('createProjectModal').style.display='flex'" class="bg-indigo-600 hover:bg-indigo-700 text-white px-6 py-3 rounded-lg transition-colors">
                                <i class="fas fa-plus mr-2"></i>Create Your First Project
                            </button>
                        </div>
                    <% } %>
                </div>
            </main>
        </div>
    </div>

    <!-- Create Project Modal -->
    <div id="createProjectModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
        <div class="bg-gray-800 rounded-xl p-8 w-full max-w-md mx-4 border border-gray-700">
            <div class="flex items-center justify-between mb-6">
                <h3 class="text-xl font-semibold text-white">Create New Project</h3>
                <button onclick="closeProjectModal()" class="text-gray-400 hover:text-white transition-colors">
                    <i class="fas fa-times text-xl"></i>
                </button>
            </div>
            
            <div>
                <div class="space-y-4">
                    <div>
                        <label class="block text-sm font-semibold text-gray-200 mb-2">Project Title</label>
                        <input type="text" id="projectTitle" name="title" required
                               class="w-full px-4 py-3 form-input rounded-xl focus-ring"
                               placeholder="Enter project title">
                    </div>
                    <div>
                        <label class="block text-sm font-semibold text-gray-200 mb-2">Description (Optional)</label>
                        <textarea id="projectDescription" name="description" rows="3"
                                  class="w-full px-4 py-3 form-input rounded-xl focus-ring"
                                  placeholder="Describe your project"></textarea>
                    </div>
                    <div class="grid grid-cols-2 gap-4">
                        <div>
                            <label class="block text-sm font-semibold text-gray-200 mb-2">Start Date</label>
                            <input type="date" id="projectStartDate" name="startDate"
                                   class="w-full px-4 py-3 form-input rounded-xl focus-ring"
                                   value="<%= new Date().toISOString().split('T')[0] %>">
                        </div>
                        <div>
                            <label class="block text-sm font-semibold text-gray-200 mb-2">End Date</label>
                            <input type="date" id="projectEndDate" name="endDate"
                                   class="w-full px-4 py-3 form-input rounded-xl focus-ring"
                                   value="<%= new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0] %>">
                        </div>
                    </div>
                    <div>
                        <label class="block text-sm font-semibold text-gray-200 mb-2">Team (Optional)</label>
                        <select id="projectTeam" name="team" class="w-full px-4 py-3 form-input rounded-xl focus-ring">
                            <option value="">Select a team</option>
                            <% teams.forEach(team => { %>
                                <option value="<%= team._id %>"><%= team.name %></option>
                            <% }); %>
                        </select>
                    </div>
                </div>

                <div class="flex space-x-4 mt-8">
                    <button type="button" onclick="document.getElementById('createProjectModal').style.display='none'" class="flex-1 px-6 py-3 border border-gray-600 text-gray-300 rounded-xl hover:bg-gray-700 transition-colors">
                        Cancel
                    </button>
                    <button type="button" id="createProjectBtn" onclick="createProject()" class="flex-1 px-6 py-3 bg-indigo-600 text-white rounded-xl hover:bg-indigo-700 transition-colors">
                        Create Project
                    </button>
                </div>
            </div>
        </div>
    </div>








    </script>

    <script>
        function showProjectModal() {
            console.log('showProjectModal called');
            const modal = document.getElementById('createProjectModal');
            if (modal) {
                modal.style.display = 'flex';
                modal.classList.remove('hidden');
                modal.classList.add('flex');
            }
        }

        function hideProjectModal() {
            console.log('hideProjectModal called');
            const modal = document.getElementById('createProjectModal');
            if (modal) {
                modal.style.display = 'none';
                modal.classList.add('hidden');
                modal.classList.remove('flex');
            }
        }

        function submitProject() {
            console.log('submitProject called');
            const titleInput = document.getElementById('projectTitle');
            const descInput = document.getElementById('projectDescription');
            const startInput = document.getElementById('projectStartDate');
            const endInput = document.getElementById('projectEndDate');
            const teamInput = document.getElementById('projectTeam');

            if (!titleInput) {
                alert('Form elements not found');
                return;
            }

            const title = titleInput.value.trim();
            const description = descInput ? descInput.value.trim() : '';
            const startDate = startInput ? startInput.value : '';
            const endDate = endInput ? endInput.value : '';
            const team = teamInput ? teamInput.value : '';

            if (!title) {
                alert('Please enter project title');
                return;
            }

            const data = {title, description, startDate, endDate};
            if (team) data.team = team;

            console.log('Submitting project:', data);

            fetch('/api/v1/projects', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                credentials: 'include',
                body: JSON.stringify(data)
            })
            .then(response => {
                console.log('Response status:', response.status);
                return response.json();
            })
            .then(data => {
                console.log('Response data:', data);
                if (data.success) {
                    alert('Project created successfully!');
                    location.reload();
                } else {
                    alert('Error: ' + (data.error || data.message || 'Unknown error'));
                }
            })
            .catch(error => {
                console.error('Fetch error:', error);
                alert('Network error: ' + error.message);
            });
        }

        // Logout function
        function logoutUser() {
            console.log('Logout function called');

            // Try multiple logout methods
            fetch('/api/v1/auth/logout', {
                method: 'GET',
                credentials: 'include'
            })
            .then(response => {
                console.log('API logout response:', response.status);
                // Regardless of API response, redirect to logout page
                window.location.href = '/auth/logout';
            })
            .catch(error => {
                console.log('API logout failed, using direct logout:', error);
                // If API fails, use direct logout
                window.location.href = '/auth/logout';
            });
        }
    </script>

</body>
</html>
